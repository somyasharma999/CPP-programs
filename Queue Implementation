#include<iostream>
#include<queue>
using namespace std;

const int capacity = 5;
int myQueue[capacity]; // Renamed from queue to myQueue
int front = -1, rear = -1;

bool isFull() {
    return rear == capacity - 1;
}

bool isEmpty() {
    return front == -1 && rear == -1;
}

void insert(int ele) {
    if (isFull()) {
        cout << "Queue is full." << endl;
    }
    else {
        if (isEmpty()) {
            front = rear = 0;
        }
        else {
            rear++;
        }
        myQueue[rear] = ele; // Changed from queue to myQueue
        cout << ele << " is inserted." << endl;
    }
}

int dequeue() {
    int ele;
    if (isEmpty()) {
        cout << "Queue is empty." << endl;
        return -1;
    }
    else {
        ele = myQueue[front]; // Changed from queue to myQueue
        if (front == rear) {
            front = rear = -1;
        }
        else {
            front++;
        }
    }
    return ele;
}

void traverse() {
    if (isEmpty()) {
        cout << "Queue is empty." << endl;
        return;
    }
    cout << "Elements in the queue are: ";
    for (int i = front; i <= rear; i++) {
        cout << myQueue[i] << " "; // Changed from queue to myQueue
    }
    cout << endl;
}

int main() {
    int choice, ele;
    while (true) {
        cout << "1. Insert" << endl;
        cout << "2. Delete" << endl;
        cout << "3. Traverse" << endl;
        cout << "4. Exit" << endl;

        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter element to insert: ";
                cin >> ele;
                insert(ele);
                break;
            case 2:
                ele = dequeue();
                if (ele != -1) {
                    cout << "Deleted element is " << ele << endl;
                }
                break;
            case 3:
                traverse();
                break;
            case 4:
                cout << "Exiting..." << endl;
                exit(0);
            default:
                cout << "Invalid choice!" << endl;
        }
    }
    return 0;
}
